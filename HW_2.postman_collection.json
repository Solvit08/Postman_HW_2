{
	"info": {
		"_postman_id": "7168ce71-2274-4e9d-9f16-f6d1a96ffa6f",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27331667"
	},
	"item": [
		{
			"name": "EP_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!ss\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var resp = pm.response.json();\r",
							"\r",
							"pm.test('Name check', function() {\r",
							"    pm.expect(resp.name).to.eql('Vitalik')\r",
							"})\r",
							"\r",
							"pm.test('age check', function() {\r",
							"    pm.expect(+resp.age).to.eql(27)\r",
							"})\r",
							"pm.test('salary check', function() {\r",
							"    pm.expect(resp.salary).to.eql(5000)\r",
							"})\r",
							"var req_name = request.data.name ;\r",
							"pm.test('name request', function() {\r",
							"    pm.expect(resp.name).to.eql(req_name)\r",
							"})\r",
							"var req_age = request.data.age\r",
							"pm.test('age request', function() {\r",
							"    pm.expect(resp.age).to.eql(req_age)\r",
							"})\r",
							"var req_salary = request.data.salary\r",
							"pm.test('Salary request', function() {\r",
							"    pm.expect(resp.salary).to.eql(+req_salary)\r",
							"})\r",
							"console.log(resp.family)\r",
							"pm.test('salary', function() {\r",
							"    pm.expect(resp.family.u_salary_1_5_year).to.eql(req_salary * 4)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Vitalik",
							"type": "text"
						},
						{
							"key": "age",
							"value": "27",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "5000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var resp = pm.response.json();\r",
							"var req = pm.request.url.query.toObject();\r",
							"pm.test('name check', function() {\r",
							"    pm.expect(resp.name).to.eql(req.name)\r",
							"})\r",
							"pm.test('age check', function() {\r",
							"    pm.expect(resp.age).to.eql(req.age)\r",
							"} )\r",
							"pm.test('salary check', function() {\r",
							"    pm.expect(resp.salary).to.eql(+req.salary)\r",
							"})\r",
							"console.log(resp.family)\r",
							"pm.test('dog has name', function() {\r",
							"    pm.expect(resp.family.pets.dog).to.have.property('name')\r",
							"})\r",
							"pm.test('dog has age', function() {\r",
							"    pm.expect(resp.family.pets.dog).to.have.property('age')\r",
							"})\r",
							"pm.test('name luky', function() {\r",
							"    pm.expect(resp.family.pets.dog.name).to.eql('Luky')\r",
							"})\r",
							"pm.test('luky age', function() {\r",
							"    pm.expect(resp.family.pets.dog.age).to.eql(4)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Vitalik&age=27&salary=5000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Vitalik"
						},
						{
							"key": "age",
							"value": "27"
						},
						{
							"key": "salary",
							"value": "5000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"var resp = pm.response.json();\r",
							"var req = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test('name check', function() {\r",
							"    pm.expect(resp.name).to.eql(req.name)\r",
							"})\r",
							"pm.test('age check', function() {\r",
							"    pm.expect(resp.age).to.eql(+req.age)\r",
							"})\r",
							"console.log(req.salary)\r",
							"console.log(resp.salary)\r",
							"console.log(resp.salary[0])\r",
							"console.log(resp.salary[1])\r",
							"console.log(resp.salary[2])\r",
							"\r",
							"pm.test('check salary_1', function() {\r",
							"    pm.expect(resp.salary[0]).to.eql(+req.salary)\r",
							"})\r",
							"pm.test('check salary_2', function() {\r",
							"    pm.expect(+resp.salary[1]).to.eql(req.salary*2)\r",
							"})\r",
							"pm.test('check salary_3', function() {\r",
							"    pm.expect(+resp.salary[2]).to.eql(req.salary*3)\r",
							"})\r",
							"\r",
							"pm.environment.set(\"name\", resp.name);\r",
							"pm.environment.set(\"age\", resp.age);\r",
							"pm.environment.set(\"salary\", resp.salary[0]);\r",
							"\r",
							"for(var key in resp.salary){\r",
							"    console.log(resp.salary[key])\r",
							"}\r",
							"\r",
							"for(i=0;i<resp.salary.length; i++){\r",
							"    console.log(resp.salary[i])\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Vitalik",
							"type": "text"
						},
						{
							"key": "age",
							"value": "27",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "5000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Vitalik&age=27&salary=5000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Vitalik"
						},
						{
							"key": "age",
							"value": "27"
						},
						{
							"key": "salary",
							"value": "5000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var resp = pm.response.json();\r",
							"var req = request.data\r",
							"pm.test('json response', function() {\r",
							"    pm.expect(resp).to.have.property('start_qa_salary')\r",
							"})\r",
							"pm.test('json response', function() {\r",
							"    pm.expect(resp).to.have.property('qa_salary_after_6_months')\r",
							"})\r",
							"pm.test('json response', function() {\r",
							"    pm.expect(resp).to.have.property('qa_salary_after_12_months')\r",
							"})\r",
							"pm.test('json response', function() {\r",
							"    pm.expect(resp).to.have.property('qa_salary_after_1.5_year')\r",
							"})\r",
							"pm.test('json response', function() {\r",
							"    pm.expect(resp).to.have.property('qa_salary_after_3.5_years')\r",
							"})\r",
							"pm.test('person', function() {\r",
							"    pm.expect(resp).to.have.property('person')\r",
							"})\r",
							"pm.test('qa_salary', function() {\r",
							"    pm.expect(resp.start_qa_salary).to.eql(+req.salary)\r",
							"})\r",
							"pm.test('qa_salary_1', function() {\r",
							"    pm.expect(resp.qa_salary_after_6_months).to.eql(+req.salary*2)\r",
							"})\r",
							"pm.test('qa_salary_2', function() {\r",
							"    pm.expect(resp.qa_salary_after_12_months).to.eql(+req.salary*2.7)\r",
							"})\r",
							"pm.test('qa_salary_3', function() {\r",
							"    pm.expect(resp['qa_salary_after_1.5_year']).to.eql(+req.salary*3.3)\r",
							"})\r",
							"pm.test('qa_salary_4', function() {\r",
							"    pm.expect(resp['qa_salary_after_3.5_years']).to.eql(+req.salary*3.8)\r",
							"})\r",
							"pm.test('first property', function() {\r",
							"    pm.expect(resp.person.u_name[1]).to.eql(+req.salary)\r",
							"})\r",
							"pm.test(' property', function() {\r",
							"    pm.expect(resp.person.u_age).to.eql(+req.age)\r",
							"})\r",
							"pm.test('5 years', function() {\r",
							"    pm.expect(resp.person.u_salary_5_years).to.eql(+req.salary*4.2)\r",
							"})\r",
							"for(var i in resp.person) {\r",
							"    console.log(resp.person[i])\r",
							"}\r",
							"//2 вариант\r",
							"for(i=0;i<resp.person.length;i++) {\r",
							"    console.log(resp.person[i])\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}